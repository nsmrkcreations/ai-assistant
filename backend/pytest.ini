[tool:pytest]
# Pytest configuration for AI Assistant Desktop Application

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
pythonpath = .

# Async support
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    security: Security tests
    edge_case: Edge case tests
    slow: Slow running tests
    network: Tests requiring network access
    gpu: Tests requiring GPU
    audio: Tests requiring audio capabilities
    gui: Tests requiring GUI automation
    
# Test output
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=services
    --cov=models
    --cov=utils
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --durations=10
    --maxfail=5

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:torch.*
    ignore::UserWarning:transformers.*
    
# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Minimum version
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# -n auto enables automatic worker detection
# Uncomment to enable parallel testing:
# addopts = -n auto